//input: n = 4, edges = [[0,1,3],[1,2,1],[1,3,4],[2,3,1]], distanceThreshold = 4
//output: 3
def findTheCity(n, edges, distanceThreshold):
    dist = [[float('inf')] * n for _ in range(n)]
    for i in range(n):
        dist[i][i] = 0
    for u, v, w in edges:
        dist[u][v] = w
        dist[v][u] = w
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][j] > dist[i][k] + dist[k][j]:
                    dist[i][j] = dist[i][k] + dist[k][j]
    min_city = -1
    min_reachable = float('inf')

    for i in range(n):
        reachable_cities = 0
        for j in range(n):
            if dist[i][j] <= distanceThreshold:
                reachable_cities += 1
        if reachable_cities < min_reachable or (reachable_cities == min_reachable and i > min_city):
            min_reachable = reachable_cities
            min_city = i
    return min_city
n = 4
edges = [[0, 1, 3], [1, 2, 1], [2, 3, 4], [0, 3, 8]]
distanceThreshold = 4

print(findTheCity(n, edges, distanceThreshold))  # Output: 3
